extends bench
block bench-script
	script.
		function init(){
			test = new dream.Screen(document.getElementById("mainCanvas"), 320, 240, 800, 600);
			test.frameRate = 250;

			scene = new dream.scenery.Scene;

			var seed = 1;
			
			for(var i = 0; i < 200*seed; i++ ){
				var c = new Poly1(Math.random() * 900, Math.random() * 600);
				c.z=1;
				scene.assets.add(c);
			}
			
			var mcr = new CompositeRect(0, 0, 50, 50);
			mcr.useBuffer = true;
			for(var i = 0; i < 12*seed; i++ ){
				//- Math.random() * 50 + 50, Math.random() * 50 + 50
				var cr = new dream.visual.Mirror(Math.random() * 700, Math.random() * 300, mcr);
				cr.z=3
				scene.assets.add(cr);
			}
			
			for(var i = 0; i < 100*seed; i++ ){
				var f = new Fire(Math.random() * 700 + 100, Math.random() * 600);
				f.z=2
				scene.assets.add(f);
			}

			en=new Enemy(0,0);
			en.behavior.actions.add(new dream.behavior.animation.Tween({left:900,top:300,alpha:0.1,rotation:355},300, new dream.behavior.animation.interpolator.Sine));
			scene.assets.add(en);
			

			test.scenes.current = scene;
			
			
			stats=new Stats();
			stats.getDomElement().style.position = 'absolute';
			stats.getDomElement().style.left = '0px';
			stats.getDomElement().style.top = '0px';
			document.body.appendChild(stats.getDomElement() );
			var stp=new dream.behavior.Action(function(){stats.update();});
			scene.behavior.actions.add(stp);
		}